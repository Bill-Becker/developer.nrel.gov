swagger: "2.0"
info:
  version: "1.0.0"
  title: EVI-Pro Lite API
  description: |-
    APIs providing output from NREL's EVI-Pro model. Used to power the EVI-Pro Lite tool at https://afdc.energy.gov/evi-pro-lite. These endpoints provide daily (24 hour) fleet-level charging load profiles for a variety of customizable scenarios.  
    
    EVI-Pro Lite is a simplified version of the Electric Vehicle Infrastructure Projection Tool (EVI-Pro). EVI-Pro uses real-world travel data from mass market consumers to estimate future requirements for residential, workplace, and public charging under a variety of scenarios. For more information regarding EVI-Pro Lite, see the [methodology and assumptions page](https://evi-pro-vue.afdc-stage.nrel.gov/evi-pro-lite/load-profile/assumptions). 
schemes:
  - https
basePath: /api/evi-pro/v1
securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: query
security:
  - api_key: []
paths:
  /daily-load-profile:
    get:
      summary: Get the daily load profile for a given scenario
      parameters:
        - name: temp_c
          in: query
          type: string
          enum: [-20, -10, 0, 10, 20, 30, 40]
          required: true
          description: Degrees in Celsius for the day on which load profile shape is desired.  Must be one of `[-20, -10, 0, 10, 20, 30, 40]`.
        - name: fleet_size
          in: query
          type: string
          required: true
          enum: [1000, 10000, 50000]
          description: Fleet size.  Must be one of `[1000, 10000, 50000]`.
        - name: mean_dvmt
          in: query
          type: string
          required: true
          enum: [25, 35, 45]
          description: Average fleet daily vehicle miles traveled.  Must be one of `[25, 35, 45]`.
        - name: pev_dist
          in: query
          type: string
          required: true
          enum: [BEV, PHEV, EQUAL]
          description: PEV distribution where numbers correlate to % of vehicle type `PHEV20, PHEV50, BEV100, BEV250`.  Must be one of `[BEV, PHEV, EQUAL]` where `BEV` represents BEV dominant scenario (10/15/25/50), `PHEV` represents PHEV dominant (25/50/10/15), and `EQUAL` represents PHEV/BEV equal shares (15/35/15/35).
        - name: class_dist
          in: query
          type: string
          required: true
          enum: [Sedan, SUV, Equal]
          description: Vehicle class distribution.  Must be one of `[Sedan, SUV, Equal]` where `Sedan` is sedan dominant scenario (80/20), `SUV` is SUV dominant (20/80), and `Equal` represents equal distribution (50/50).
        - name: pref_dist
          in: query
          type: string
          required: true
          enum: [HOME60, HOME80, HOME100]
          description: Preference for charging at home (versus at work).  Must be one of `[HOME60, HOME80, HOME100]` where 60% perfer home charging, 80% prefer home charging, and 100% prefer home charging.
        - name: home_access_dist
          in: query
          type: string
          required: true
          enum: [HA50, HA75, HA100]
          description: Access to home power where numbers represent access to home power.  Must be one of `[HA50, HA75, HA100]` where `HA100` reflects a region with a high fraction of single family homes.
        - name: home_power_dist
          in: query
          type: string
          required: true
          enum: [MostL1, MostL2, Equal]
          description: Options for home power distribution scenarios where `MostL1` represents 80% L1 charging, 20% L2, `MostL2` represents 20% L1 charging, 80% L2, and `Equal` represents 50% L1 charging, 50% L2.  Must be one of `[MostL1, MostL2, Equal]`
        - name: work_power_dist
          in: query
          type: string
          required: true
          enum: [MostL1, MostL2, Equal]
          description: Options for work power distribution scenarios where `MostL1` represents 80% L1 charging, 20% L2, `MostL2` represents 20% L1 charging, 80% L2, and `Equal` represents 50% L1 charging, 50% L2.  Must be one of `[MostL1, MostL2, Equal]`
      responses:
        "200":
          description: Successful request
          schema:
            $ref: "#/definitions/loadProfile"
  /daily-load-profile/breakdown:
    get:
      summary: Get the daily load profile for a given scenario broken down by pev_type (one of PHEV20, PHEV50, BEV100, BEV250) and class_type (Sedan or SUV)
      parameters:
        - name: temp_c
          in: query
          type: string
          enum: [-20, -10, 0, 10, 20, 30, 40]
          required: true
          description: Degrees in Celsius for the day on which load profile shape is desired.  Must be one of `[-20, -10, 0, 10, 20, 30, 40]`.
        - name: fleet_size
          in: query
          type: string
          required: true
          enum: [1000, 10000, 50000]
          description: Fleet size.  Must be one of `[1000, 10000, 50000]`.
        - name: mean_dvmt
          in: query
          type: string
          required: true
          enum: [25, 35, 45]
          description: Average fleet daily vehicle miles traveled.  Must be one of `[25, 35, 45]`.
        - name: pev_dist
          in: query
          type: string
          required: true
          enum: [BEV, PHEV, EQUAL]
          description: PEV distribution where numbers correlate to % of vehicle type `PHEV20, PHEV50, BEV100, BEV250`.  Must be one of `[BEV, PHEV, EQUAL]` where `BEV` represents BEV dominant scenario (10/15/25/50), `PHEV` represents PHEV dominant (25/50/10/15), and `EQUAL` represents PHEV/BEV equal shares (15/35/15/35).
        - name: class_dist
          in: query
          type: string
          required: true
          enum: [Sedan, SUV, Equal]
          description: Vehicle class distribution.  Must be one of `[Sedan, SUV, Equal]` where `Sedan` is sedan dominant scenario (80/20), `SUV` is SUV dominant (20/80), and `Equal` represents equal distribution (50/50).
        - name: pref_dist
          in: query
          type: string
          required: true
          enum: [HOME60, HOME80, HOME100]
          description: Preference for charging at home (versus at work).  Must be one of `[HOME60, HOME80, HOME100]` where 60% perfer home charging, 80% prefer home charging, and 100% prefer home charging.
        - name: home_access_dist
          in: query
          type: string
          required: true
          enum: [HA50, HA75, HA100]
          description: Access to home power where numbers represent access to home power.  Must be one of `[HA50, HA75, HA100]` where `HA100` reflects a region with a high fraction of single family homes.
        - name: home_power_dist
          in: query
          type: string
          required: true
          enum: [MostL1, MostL2, Equal]
          description: Options for home power distribution scenarios where `MostL1` represents 80% L1 charging, 20% L2, `MostL2` represents 20% L1 charging, 80% L2, and `Equal` represents 50% L1 charging, 50% L2.  Must be one of `[MostL1, MostL2, Equal]`
        - name: work_power_dist
          in: query
          type: string
          required: true
          enum: [MostL1, MostL2, Equal]
          description: Options for work power distribution scenarios where `MostL1` represents 80% L1 charging, 20% L2, `MostL2` represents 20% L1 charging, 80% L2, and `Equal` represents 50% L1 charging, 50% L2.  Must be one of `[MostL1, MostL2, Equal]`
      responses:
        "200":
          description: Successful request
          schema:
            $ref: "#/definitions/loadProfileBreakdown"
definitions:
  error:
    type: object
    properties:
      code:
        type: string
        description: A static code value representing the type of error.
        example: NOT_FOUND
      developer_message:
        type: string
        description: A human readable description of the error message.
        example: No data was found for the gisjoin provided
  loadProfileInputs:
    type: object
    properties:
      temp_c:
        type: string
        example: -20
      fleet_size:
        type: string
        example: 1000
      mean_dvmt:
        type: string
        example: 45
      pev_dist:
        type: string
        example: PHEV
      class_dist:
        type: string
        example: SUV
      pref_dist:
        type: string
        example: Home60
      home_access_dist:
        type: string
        example: HA50
      home_power_dist:
        type: string
        example: MostL2
      work_power_dist:
        type: string
        example: MostL2
  loadProfileExample:
    type: array
    items:
      type: integer
      example: 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 3, 2.74, 1.4, 1.4, 1.4, 2.1, 1.87, 2.8, 2.8, 2.8, 3.27, 5.6, 5.6, 5.6, 5.6, 8.4, 9.8, 15.86, 21, 36.12, 41.44, 47.65, 56, 71.77, 80.74, 85.06, 90.16, 95.3, 97.63, 96.13, 96.89, 95.67, 95.43, 95.17, 94.36, 95.3, 97.82, 92.4, 92.4, 88.16, 89.68, 89.41, 88.11, 82.51, 83.03, 80.6, 81.37, 79.44, 79.92, 77.45, 72.24, 62.68, 55.92, 49.18, 50.4, 42.51, 37.51, 33.42, 30.8, 27.07, 25.38, 21.93, 19.6, 16.15, 13.44, 9.8, 8.4, 8.4, 8.4, 8.68, 8.4, 8.4, 7.11, 7, 7, 5.6, 5.6, 5.6, 6.72, 5.6, 5.6, 3.55, 2.8, 2.8, 2.8, 2.8, 3.27
  weekdayLoadProfile:
    type: object
    properties:
      home_l1:
        $ref: "#/definitions/loadProfileExample"
      home_l2:
        $ref: "#/definitions/loadProfileExample"
      work_l1:
        $ref: "#/definitions/loadProfileExample"
      work_l2:
        $ref: "#/definitions/loadProfileExample"
      public_l2:
        $ref: "#/definitions/loadProfileExample"
      public_l3:
        $ref: "#/definitions/loadProfileExample"
  loadProfile:
    properties:
      errors:
        type: array
        items:
          $ref: "#/definitions/error"
        example: []
      metadata:
        type: object
        properties:
          version:
            type: string
            example: 0.0.0
          inputs:
            type: object
            example:
              temp_c: -20
              fleet_size: 1000
              mean_dvmt: 45
              pev_dist: PHEV
              class_dist: SUV
              pref_dist: Home60
              home_access_dist: HA50
              home_power_dist: MostL2
              work_power_dist: MostL2
      results:
        type: object
        properties:
          weekday_load_profile:
            $ref: "#/definitions/weekdayLoadProfile"
          weekend_load_profile:
            $ref: "#/definitions/weekdayLoadProfile"
  breakdownByCharger:
    type: object
    properties:
      bev100_sedan:
        $ref: "#/definitions/loadProfileExample"
      bev250_sedan:
        $ref: "#/definitions/loadProfileExample"
      bev100_suv:
        $ref: "#/definitions/loadProfileExample"
      bev250_suv:
        $ref: "#/definitions/loadProfileExample"
      phev20_sedan:
        $ref: "#/definitions/loadProfileExample"
      phev50_sedan:
        $ref: "#/definitions/loadProfileExample"
      phev20_suv:
        $ref: "#/definitions/loadProfileExample"
      phev50_suv:
        $ref: "#/definitions/loadProfileExample"
  loadProfileBreakdown:
    properties:
      errors:
        type: array
        items:
          $ref: "#/definitions/error"
        example: []
      metadata:
        type: object
        properties:
          version:
            type: string
            example: 0.0.0
          inputs:
            type: object
            example:
              temp_c: -20
              fleet_size: 1000
              mean_dvmt: 45
              pev_dist: PHEV
              class_dist: SUV
              pref_dist: Home60
              home_access_dist: HA50
              home_power_dist: MostL2
              work_power_dist: MostL2
      results:
        type: object
        properties:
          weekday_load_profile:
            type: object
            properties:
              home_l1:
                $ref: "#/definitions/breakdownByCharger"
              home_l2:
                $ref: "#/definitions/breakdownByCharger"
              work_l1:
                $ref: "#/definitions/breakdownByCharger"
              work_l2:
                $ref: "#/definitions/breakdownByCharger"
              public_l2:
                $ref: "#/definitions/breakdownByCharger"
              public_l3:
                $ref: "#/definitions/breakdownByCharger"
          weekend_load_profile:
            type: object
            properties:
              home_l1:
                $ref: "#/definitions/breakdownByCharger"
              home_l2:
                $ref: "#/definitions/breakdownByCharger"
              work_l1:
                $ref: "#/definitions/breakdownByCharger"
              work_l2:
                $ref: "#/definitions/breakdownByCharger"
              public_l2:
                $ref: "#/definitions/breakdownByCharger"
              public_l3:
                $ref: "#/definitions/breakdownByCharger"
